generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Session {
  id           String  @id @default(cuid())
  sessionToken String  @unique
  refreshToken String?
  userId       String  @unique
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Otp {
  id     String   @id @default(cuid())
  userId String   @unique
  otp    Int      @unique
  date   DateTime
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String        @id @default(cuid())
  email     String        @unique
  title     UserTitle
  firstName String
  lastName  String
  IdNumber  String        @unique
  phone     String        @unique
  password  String
  ethnicity UserEthnicity
  role      UserRole
  gender    String?
  status    UserStatus    @default(Active)
  createdAt DateTime      @default(now())
  otp       Otp?
  session   Session?
}

model Applications {
  id             String   @id
  NameOfCompany  String
  ContactPerson  String
  ApplicantType  String?
  ApplicationType String?
  Email          String   @unique
  PhoneNumber    String   @unique
  Address        String
  IdNumber       String?
  InvestmentType String?
  ProjectName    String?
  City           String
  Province       String
  EquityAmount   String?
  PostalCode     String
  LoanType       String
  Rate           String?
  Docs           String?
  Country        String?
  LoanAmount     String
  LoanStatus     String   @default("Pending")
  createdAt      DateTime @default(now())
}

model FirstHomeLoan {
  id                                 String   @id
  LoanType                           String
  idNumber                           String   @unique
  firstName                          String
  lastName                           String
  email                              String
  phone                              String
  gender                             String
  race                               String
  address                            String
  suburb                             String
  city                               String
  province                           String
  postalCode                         String
  supportType                        String
  projectProvince                    String
  municipalityMetro                  String
  projectName                        String
  product                            String
  isCitizenOrResident                String
  isOver18                           String
  isFirstTimeBuyer                   String
  hasDependents                      String
  monthlyIncomeApplicant             String
  monthlyIncomeSpouse                String
  combinedMonthlyIncome              String
  femaleChildrenUnder18              String
  maleChildrenUnder18                String
  femaleChildren18To24               String
  maleChildren18To24                 String
  otherDependents                    String
  currentCompanyName                 String
  currentCompanyAddress              String
  currentCompanySuburb               String
  currentCompanyCity                 String
  currentCompanyProvince             String
  currentCompanyPostalCode           String
  currentCompanyEmploymentDate       String
  currentCompanyContactPersonName    String
  currentCompanyContactPersonPhone   String
  currentCompanyContactPersonEmail   String
  previousCompanyName                String
  previousCompanyAddress             String
  previousCompanySuburb              String
  previousCompanyCity                String
  previousCompanyProvince            String
  previousCompanyPostalCode          String
  previousCompanyEmploymentStartDate String
  previousCompanyEmploymentEndDate   String
  previousCompanyContactPersonName   String
  previousCompanyContactPersonPhone  String
  previousCompanyContactPersonEmail  String
  termsAgreement                     String
  createdAt                          DateTime @default(now())
}

model Projects {
  id                     String @id @default(cuid())
  projectName            String
  projectCode            String
  programme              String
  projectStatus          String
  province               String
  municipality           String
  ward                   String
  address                String
  gpscoordinates         String
  projectOwner           String
  developer              String
  projectLiason          String
  materialSupplier       String
  contractor             String
  deliverablesSummary    String
  skilledWorkers         Int
  unskilledWorkers       Int
  schools                Int
  clinics                Int
  communityHalls         Int
  sportsField            Int
  implementationPartners String
}

model AdminQueries {
  id          String  @id @default(cuid())
  referenceNo String
  fullName    String
  queryType   String
  queryDate   String
  queryStatus String
  description String
  appliedLoan String
  replyTo     String?
  attachments String
}

model userReplies {
  id          String @id @default(cuid())
  replyTo     String
  attachments String
}

model adminReplies {
  id          String @id @default(cuid())
  replyTo     String
  attachments String
}

model UserQueries {
  id          String  @id @default(cuid())
  referenceNo String
  fullName    String
  queryType   String
  queryDate   String
  queryStatus String
  description String
  appliedLoan String
  replyTo     String?
  attachments String
}

enum BookStatus {
  Issued
  Handed_In
  New_Stock
  Complete
  Re_Issued
}

enum UserActivityAction {
  Create
  Delete
  Update
}

enum UserStatus {
  Active
  Inactive
  Removed
}

enum UserRole {
  Admin
  Client
  Camera_Uploader
  Traffic_Officer
}

enum UserEthnicity {
  Black
  Coloured
  White
  Indian
  Asian
}

enum UserTitle {
  Mr
  Mrs
  Miss
  Ms
  Dr
}
